{"version":3,"sources":["components/Alert/index.js","components/Alert/README.md","components/index.jsx"],"names":["types","readme","README","text","map","type","key","charAt","toLocaleUpperCase","slice","isDismissible","module","exports","marked","setOptions","renderer","Renderer","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","PropTypes","node","string","Component","children","React","useState","markdown","setMarkdown","useEffect","fetch","then","response","className","dangerouslySetInnerHTML","__html"],"mappings":"8HAAA,0DAIA,MAAMA,EAAQ,CAAC,UAAW,YAAa,OAAQ,UAAW,UAAW,UACtD,cAEP,kBAAC,UAAD,CAAWC,OAAQC,KACf,6BACA,kBAAC,QAAD,CAAOC,KAAM,6CACZH,EAAMI,IAAKC,GACR,kBAAC,QAAD,CAAOC,IAAKD,EAAMA,KAAMA,GACpB,gCACKA,EAAKE,OAAO,GAAGC,oBACfH,EAAKI,MAAM,MAKxB,kBAAC,QAAD,CAAOJ,KAAM,UAAWK,eAAa,GACjC,8F,mBCpBhBC,EAAOC,QAAU,IAA0B,mC,mGCI3CC,IAAOC,WAAW,CAChBC,SAAU,IAAIF,IAAOG,SACrBC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,aAAa,IA8BUC,IAAjBC,KAAiBD,IAAXE,OAOCC,UAlCG,EAAGC,WAAU3B,aAAc,MAAD,EACV4B,IAAMC,SAAS,IADL,mBACnCC,EADmC,KACzBC,EADyB,KAU1C,OARAH,IAAMI,UAAU,KACdC,MAAMjC,GACHkC,KAAMC,GAAaA,EAASjC,QAC5BgC,KAAMhC,IACL6B,EAAYnB,IAAOV,QAKvB,oCACE,yBAAKkC,UAAU,+BACZpC,GACC,yBAAKoC,UAAU,iCACb,yBAAKC,wBAAyB,CAAEC,OAAQR,OAI9C,yBAAKM,UAAU,gCACb,wBAAIA,UAAU,sBAAd,WACCT","file":"static/js/1.8ae1eea1.chunk.js","sourcesContent":["import React from \"react\";\nimport README from \"./README.md\";\nimport Component from \"..\";\nimport { Alert } from \"@kvraamkey/react-ui\";\nconst types = [\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"danger\"];\nexport default () => {\n    return (\n        <Component readme={README}>\n            <br />\n            <Alert text={<strong>Default</strong>} />\n            {types.map((type) => (\n                <Alert key={type} type={type}>\n                    <strong>\n                        {type.charAt(0).toLocaleUpperCase()}\n                        {type.slice(1)}\n                    </strong>\n                </Alert>\n            ))}\n\n            <Alert type={\"warning\"} isDismissible>\n                <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</span>\n            </Alert>\n        </Component>\n    );\n};\n","module.exports = __webpack_public_path__ + \"static/media/README.de4bf844.md\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport marked from 'marked';\n\nmarked.setOptions({\n  renderer: new marked.Renderer(),\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false\n});\n\nconst Component = ({ children, readme }) => {\n  const [markdown, setMarkdown] = React.useState('');\n  React.useEffect(() => {\n    fetch(readme)\n      .then((response) => response.text())\n      .then((text) => {\n        setMarkdown(marked(text));\n      });\n  });\n\n  return (\n    <>\n      <div className='docs-readme animate-opacity'>\n        {readme && (\n          <div className='markdown-body animate-opacity'>\n            <div dangerouslySetInnerHTML={{ __html: markdown }} />\n          </div>\n        )}\n      </div>\n      <div className='docs-example animate-opacity'>\n        <h3 className='docs-example-title'>Example</h3>\n        {children}\n      </div>\n    </>\n  );\n};\n\nconst { node, string } = PropTypes;\n\nComponent.propTypes = {\n  children: node.isRequired,\n  readme: string\n};\n\nexport default Component;\n"],"sourceRoot":""}