{"version":3,"sources":["components/Button/README.md","components/Button/index.js","components/index.jsx"],"names":["module","exports","readme","README","List","name","className","variant","disabled","link","marked","setOptions","renderer","Renderer","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","PropTypes","node","string","Component","children","React","useState","markdown","setMarkdown","useEffect","fetch","then","response","text","dangerouslySetInnerHTML","__html"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,mC,+BCA3C,0DAKe,cAEX,kBAAC,UAAD,CAAWC,OAAQC,KACjB,iDACA,kBAAC,SAAOC,KAAR,KACE,kBAAC,SAAD,CAAQC,KAAK,UAAUC,UAAU,WACjC,kBAAC,SAAD,CAAQD,KAAK,UAAUE,QAAS,YAChC,kBAAC,SAAD,CAAQF,KAAK,YAAYE,QAAS,cAClC,kBAAC,SAAD,CAAQF,KAAK,UAAUE,QAAS,YAChC,kBAAC,SAAD,CAAQF,KAAK,OAAOE,QAAS,SAC7B,kBAAC,SAAD,CAAQF,KAAK,UAAUE,QAAS,YAChC,kBAAC,SAAD,CAAQF,KAAK,SAASE,QAAS,SAAUC,UAAQ,IACjD,kBAAC,SAAD,CAAQH,KAAK,OAAOE,QAAS,SAC7B,kBAAC,SAAD,CAAQF,KAAK,cAAcI,MAAI,KAEjC,iD,mGChBNC,IAAOC,WAAW,CAChBC,SAAU,IAAIF,IAAOG,SACrBC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,aAAa,IA8BUC,IAAjBC,KAAiBD,IAAXE,OAOCC,UAlCG,EAAGC,WAAUvB,aAAc,MAAD,EACVwB,IAAMC,SAAS,IADL,mBACnCC,EADmC,KACzBC,EADyB,KAU1C,OARAH,IAAMI,UAAU,KACdC,MAAM7B,GACH8B,KAAMC,GAAaA,EAASC,QAC5BF,KAAME,IACLL,EAAYnB,IAAOwB,QAKvB,oCACE,yBAAK5B,UAAU,+BACZJ,GACC,yBAAKI,UAAU,iCACb,yBAAK6B,wBAAyB,CAAEC,OAAQR,OAI9C,yBAAKtB,UAAU,gCACb,wBAAIA,UAAU,sBAAd,WACCmB","file":"static/js/2.39067c01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/README.ca7cd6d2.md\";","import React from 'react';\nimport README from './README.md';\nimport Component from '../';\nimport { Button } from '@kvraamkey/react-ui';\n\nexport default () => {\n  return (\n    <Component readme={README}>\n      <h4>Button Variations</h4>\n      <Button.List>\n        <Button name='Default' className='custom' />\n        <Button name='Primary' variant={'primary'} />\n        <Button name='Secondary' variant={'secondary'} />\n        <Button name='Success' variant={'success'} />\n        <Button name='Info' variant={'info'} />\n        <Button name='Warning' variant={'warning'} />\n        <Button name='Danger' variant={'danger'} disabled />\n        <Button name='Dark' variant={'dark'} />\n        <Button name='link button' link />\n      </Button.List>\n      <h4>Outline Buttons</h4>\n    </Component>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport marked from 'marked';\n\nmarked.setOptions({\n  renderer: new marked.Renderer(),\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false\n});\n\nconst Component = ({ children, readme }) => {\n  const [markdown, setMarkdown] = React.useState('');\n  React.useEffect(() => {\n    fetch(readme)\n      .then((response) => response.text())\n      .then((text) => {\n        setMarkdown(marked(text));\n      });\n  });\n\n  return (\n    <>\n      <div className='docs-readme animate-opacity'>\n        {readme && (\n          <div className='markdown-body animate-opacity'>\n            <div dangerouslySetInnerHTML={{ __html: markdown }} />\n          </div>\n        )}\n      </div>\n      <div className='docs-example animate-opacity'>\n        <h3 className='docs-example-title'>Example</h3>\n        {children}\n      </div>\n    </>\n  );\n};\n\nconst { node, string } = PropTypes;\n\nComponent.propTypes = {\n  children: node.isRequired,\n  readme: string\n};\n\nexport default Component;\n"],"sourceRoot":""}