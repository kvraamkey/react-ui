{"version":3,"sources":["components/Radio/README.md","components/Radio/index.js","components/index.jsx"],"names":["module","exports","React","useState","selectedValue","setSelectedValue","handleChange","event","target","value","readme","README","className","name","checked","onChange","marked","setOptions","renderer","Renderer","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","PropTypes","node","string","Component","children","markdown","setMarkdown","useEffect","fetch","then","response","text","dangerouslySetInnerHTML","__html"],"mappings":"mHAAAA,EAAOC,QAAU,IAA0B,mC,gGCK5B,eAAO,MAAD,EACyBC,IAAMC,SAAS,KADxC,mBACVC,EADU,KACKC,EADL,KAGXC,EAAgBC,IAClBF,EAAiBE,EAAMC,OAAOC,QAGlC,OACI,kBAAC,UAAD,CAAWC,OAAQC,KACf,6BACA,kBAAC,QAAD,CAAOC,UAAU,SAASC,KAAK,YAAYC,QAA2B,MAAlBV,EAAuBW,SAAUT,EAAcG,MAAM,MAEzG,kBAAC,QAAD,CAAOI,KAAK,SAASC,QAA2B,MAAlBV,EAAuBW,SAAUT,EAAcG,MAAM,S,mGCb/FO,IAAOC,WAAW,CAChBC,SAAU,IAAIF,IAAOG,SACrBC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,aAAa,IA8BUC,IAAjBC,KAAiBD,IAAXE,OAOCC,UAlCG,EAAGC,WAAUrB,aAAc,MAAD,EACVR,IAAMC,SAAS,IADL,mBACnC6B,EADmC,KACzBC,EADyB,KAU1C,OARA/B,IAAMgC,UAAU,KACdC,MAAMzB,GACH0B,KAAMC,GAAaA,EAASC,QAC5BF,KAAME,IACLL,EAAYjB,IAAOsB,QAKvB,oCACE,yBAAK1B,UAAU,+BACZF,GACC,yBAAKE,UAAU,iCACb,yBAAK2B,wBAAyB,CAAEC,OAAQR,OAI9C,yBAAKpB,UAAU,gCACb,wBAAIA,UAAU,sBAAd,WACCmB","file":"static/js/3.e11f4cbe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/README.111c9564.md\";","import React from \"react\";\nimport README from \"./README.md\";\nimport Component from \"..\";\nimport { Radio } from \"@kvraamkey/react-ui\";\n\nexport default () => {\n    const [selectedValue, setSelectedValue] = React.useState(\"A\");\n\n    const handleChange = (event) => {\n        setSelectedValue(event.target.value);\n    };\n\n    return (\n        <Component readme={README}>\n            <br />\n            <Radio className='custom' name='Select Me' checked={selectedValue === \"A\"} onChange={handleChange} value='A' />\n\n            <Radio name='Select' checked={selectedValue === \"B\"} onChange={handleChange} value='B' />\n        </Component>\n    );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport marked from 'marked';\n\nmarked.setOptions({\n  renderer: new marked.Renderer(),\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false\n});\n\nconst Component = ({ children, readme }) => {\n  const [markdown, setMarkdown] = React.useState('');\n  React.useEffect(() => {\n    fetch(readme)\n      .then((response) => response.text())\n      .then((text) => {\n        setMarkdown(marked(text));\n      });\n  });\n\n  return (\n    <>\n      <div className='docs-readme animate-opacity'>\n        {readme && (\n          <div className='markdown-body animate-opacity'>\n            <div dangerouslySetInnerHTML={{ __html: markdown }} />\n          </div>\n        )}\n      </div>\n      <div className='docs-example animate-opacity'>\n        <h3 className='docs-example-title'>Example</h3>\n        {children}\n      </div>\n    </>\n  );\n};\n\nconst { node, string } = PropTypes;\n\nComponent.propTypes = {\n  children: node.isRequired,\n  readme: string\n};\n\nexport default Component;\n"],"sourceRoot":""}