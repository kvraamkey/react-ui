{"version":3,"sources":["components/Button/README.md","components/Button/index.js","components/index.jsx"],"names":["module","exports","readme","README","List","name","variant","disabled","as","href","link","outline","rounded","marked","setOptions","renderer","Renderer","gfm","tables","breaks","pedantic","sanitize","smartLists","smartypants","PropTypes","node","string","Component","children","React","useState","markdown","setMarkdown","useEffect","fetch","then","response","text","className","dangerouslySetInnerHTML","__html"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,mC,+BCA3C,0DAKe,cAEP,kBAAC,UAAD,CAAWC,OAAQC,KACf,iDACA,kBAAC,SAAOC,KAAR,KACI,kBAAC,SAAD,CAAQC,KAAK,UAAUC,QAAS,eAChC,kBAAC,SAAD,CAAQD,KAAK,UAAUC,QAAS,SAChC,kBAAC,SAAD,CAAQD,KAAK,YAAYC,QAAS,WAClC,kBAAC,SAAD,CAAQD,KAAK,UAAUC,QAAS,UAChC,kBAAC,SAAD,CAAQD,KAAK,OAAOC,QAAS,SAC7B,kBAAC,SAAD,CAAQD,KAAK,UAAUC,QAAS,WAChC,kBAAC,SAAD,CAAQD,KAAK,SAASC,QAAS,MAAOC,UAAQ,IAC9C,kBAAC,SAAD,CAAQF,KAAK,OAAOC,QAAS,UAC7B,kBAAC,SAAD,CAAQD,KAAK,cAAcG,GAAI,IAAKC,KAAK,IAAIC,MAAI,KAErD,+DACA,kBAAC,SAAON,KAAR,KACI,kBAAC,SAAD,CAAQC,KAAK,UAAUM,SAAO,IAC9B,kBAAC,SAAD,CAAQN,KAAK,UAAUC,QAAS,OAAQK,SAAO,IAC/C,kBAAC,SAAD,CAAQN,KAAK,YAAYC,QAAS,SAAUK,SAAO,IACnD,kBAAC,SAAD,CAAQN,KAAK,UAAUC,QAAS,QAASK,SAAO,IAChD,kBAAC,SAAD,CAAQN,KAAK,OAAOC,QAAS,OAAQK,SAAO,KAGhD,uEACA,kBAAC,SAAOP,KAAR,KACI,kBAAC,SAAD,CAAQC,KAAK,UAAUM,SAAO,EAACC,SAAO,IACtC,kBAAC,SAAD,CAAQP,KAAK,UAAUC,QAAS,OAAQK,SAAO,EAACC,SAAO,EAACF,MAAI,IAC5D,kBAAC,SAAD,CAAQL,KAAK,YAAYC,QAAS,SAAUK,SAAO,EAACC,SAAO,IAC3D,kBAAC,SAAD,CAAQP,KAAK,UAAUC,QAAS,QAASK,SAAO,EAACC,SAAO,IACxD,kBAAC,SAAD,CAAQP,KAAK,OAAOC,QAAS,OAAQK,SAAO,EAACC,SAAO,O,mGC/BpEC,IAAOC,WAAW,CAChBC,SAAU,IAAIF,IAAOG,SACrBC,KAAK,EACLC,QAAQ,EACRC,QAAQ,EACRC,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,aAAa,IA8BUC,IAAjBC,KAAiBD,IAAXE,OAOCC,UAlCG,EAAGC,WAAU1B,aAAc,MAAD,EACV2B,IAAMC,SAAS,IADL,mBACnCC,EADmC,KACzBC,EADyB,KAU1C,OARAH,IAAMI,UAAU,KACdC,MAAMhC,GACHiC,KAAMC,GAAaA,EAASC,QAC5BF,KAAME,IACLL,EAAYnB,IAAOwB,QAKvB,oCACE,yBAAKC,UAAU,+BACZpC,GACC,yBAAKoC,UAAU,iCACb,yBAAKC,wBAAyB,CAAEC,OAAQT,OAI9C,yBAAKO,UAAU,gCACb,wBAAIA,UAAU,sBAAd,WACCV","file":"static/js/2.34c46d38.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/README.ca7cd6d2.md\";","import React from \"react\";\nimport README from \"./README.md\";\nimport Component from \"../\";\nimport { Button } from \"@kvraamkey/react-ui\";\n\nexport default () => {\n    return (\n        <Component readme={README}>\n            <h4>Button Variations</h4>\n            <Button.List>\n                <Button name='Default' variant={\"light-grey\"} />\n                <Button name='Primary' variant={\"blue\"} />\n                <Button name='Secondary' variant={\"indigo\"} />\n                <Button name='Success' variant={\"green\"} />\n                <Button name='Info' variant={\"cyan\"} />\n                <Button name='Warning' variant={\"orange\"} />\n                <Button name='Danger' variant={\"red\"} disabled />\n                <Button name='Dark' variant={\"black\"} />\n                <Button name='link button' as={\"a\"} href='/' link />\n            </Button.List>\n            <h4>Outline Buttons with Variations</h4>\n            <Button.List>\n                <Button name='Default' outline />\n                <Button name='Primary' variant={\"blue\"} outline />\n                <Button name='Secondary' variant={\"indigo\"} outline />\n                <Button name='Success' variant={\"green\"} outline />\n                <Button name='Info' variant={\"cyan\"} outline />\n            </Button.List>\n\n            <h4>Outline Buttons with Variations rounded</h4>\n            <Button.List>\n                <Button name='Default' outline rounded />\n                <Button name='Primary' variant={\"blue\"} outline rounded link />\n                <Button name='Secondary' variant={\"indigo\"} outline rounded />\n                <Button name='Success' variant={\"green\"} outline rounded />\n                <Button name='Info' variant={\"cyan\"} outline rounded />\n            </Button.List>\n        </Component>\n    );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport marked from 'marked';\n\nmarked.setOptions({\n  renderer: new marked.Renderer(),\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false\n});\n\nconst Component = ({ children, readme }) => {\n  const [markdown, setMarkdown] = React.useState('');\n  React.useEffect(() => {\n    fetch(readme)\n      .then((response) => response.text())\n      .then((text) => {\n        setMarkdown(marked(text));\n      });\n  });\n\n  return (\n    <>\n      <div className='docs-readme animate-opacity'>\n        {readme && (\n          <div className='markdown-body animate-opacity'>\n            <div dangerouslySetInnerHTML={{ __html: markdown }} />\n          </div>\n        )}\n      </div>\n      <div className='docs-example animate-opacity'>\n        <h3 className='docs-example-title'>Example</h3>\n        {children}\n      </div>\n    </>\n  );\n};\n\nconst { node, string } = PropTypes;\n\nComponent.propTypes = {\n  children: node.isRequired,\n  readme: string\n};\n\nexport default Component;\n"],"sourceRoot":""}